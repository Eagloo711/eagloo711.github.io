/* Resets styles for all elements, including before and after pseudo-elements, to provide a consistent baseline across browsers */
*, *::before, *::after {
    margin: 0; /* Removes the default margin */
    padding: 0; /* Removes the default padding */
    box-sizing: border-box; /* Changes the default CSS box model to include padding and border in the element's total width and height */
}

/* Styles applied to the body element, affecting the whole page */
body {
    font-family: 'Arial', sans-serif; /* Sets the default font for the page */
    color: #b0b0b0; /* Sets the default text color to light grey */
    background-color: #0a0a0a; /* Sets a very dark gray, almost black, as the background color */
    line-height: 1.6; /* Sets the spacing between lines of text */
    padding: 20px; /* Adds padding around the content of the whole page */
    text-align: center; /* Centers text within elements */
    background-image: url('Background.jpg'); /* Sets a background image for the page */
    background-size: cover; /* Ensures the background image covers the entire page */
    background-position: center; /* Centers the background image */
    background-attachment: fixed; /* Keeps the background image fixed in place when scrolling */
    background-blend-mode: overlay; /* Blends the background image with the color specified in background-color */
    background-color: rgba(10, 10, 10, 0.8); /* Sets a slightly transparent black color as the background, blending with the image */
}

/* Styles for links (<a> tags) */
a {
    color: #8B0000; /* Sets link color to dark red */
    display: inline-flex; /* Displays links as flex containers, allowing for additional alignment properties */
    align-items: center; /* Centers items vertically within the link */
}

/* Styles applied to the header element */
header {
    display: flex; /* Uses flexbox layout to organize child elements */
    flex-direction: column; /* Stacks child elements vertically */
    align-items: center; /* Centers child elements horizontally */
    justify-content: center; /* Centers child elements vertically */
}


/* Styles applied to h1 and p elements within the header */
header h1, header p {
    margin-bottom: 10px; /* Adds spacing below each element */
    font-size: 2.5em; /* Sets the size of the font, larger than the default */
}

/* Styles for the image in the header */
.header-image {
    width: 400px; /* Sets the width of the image */
    height: auto; /* Maintains the aspect ratio of the image */
    border-radius: 50%; /* Makes the image circular */
    opacity: 0.75; /* Sets the image opacity to 75%, making it slightly transparent */
    transition: border-color 0.5s ease; /* Animates changes to the border color over 0.5 seconds */
    border: 2px solid transparent; /* Sets a transparent border */
    position: relative; /* Positioning context for pseudo-elements */
    border-color: #8B0000; /* Dark red border color on hover (this should actually be under a :hover selector to work as intended) */
}

/* Hover effect for the header image */
.header-image:hover {
    border-color: #8B0000; /* Changes the border color to dark red when the mouse hovers over the image */
}

/* Base styles for section elements */
section {
    display: flex; /* Uses flexbox layout for contents */
    flex-direction: column; /* Stacks child elements vertically */
    align-items: center; /* Centers child elements horizontally */
    justify-content: center; /* Centers child elements vertically */
    margin-bottom: 30px; /* Adds spacing below the section */
    opacity: 0; /* Initially hides the section (for a fade-in effect) */
    transform: translateY(50px); /* Moves the section down 50px from its original position */
    transition: opacity 1.5s ease-out, transform 1.5s ease-out; /* Animates the opacity and transform properties */
}

/* Styles for elements that become visible (likely added via JavaScript as the user scrolls) */
.element-visible {
    opacity: 1; /* Makes the element fully opaque */
    transform: translateY(0); /* Moves the element to its original position */
}

/* Styles for h2 and h3 headings */
h2, h3 {
    color: #8B0000; /* Sets the color to dark red */
    margin-bottom: 20px; /* Adds spacing below the heading */
    padding-bottom: 10px; /* Adds padding below the heading for spacing */
    position: relative; /* Positioning context for pseudo-elements */
}

/* After pseudo-elements for h2 and h3, used for underlining effects */
h2::after, h3::after {
    content: ''; /* Necessary for the pseudo-element to display */
    position: absolute; /* Positions the pseudo-element relative to its parent */
    bottom: -10px; /* Positions the pseudo-element below the heading */
    left: 0; /* Aligns the pseudo-element to the left edge of the heading */
    width: 100%; /* Sets the pseudo-element to match the width of the heading */
    height: 2px; /* Sets the height of the pseudo-element, creating a line */
    background-color: #8B0000; /* Sets the line color to dark red */
    transform: scaleX(0); /* Initially scales the pseudo-element to 0, effectively hiding it */
    transform-origin: bottom left; /* Sets the origin point for the transformation */
    transition: transform 2s ease-out; /* Animates the scaling transformation */
}

/* Adds an underline effect when the heading is in view or hovered over */
.animate-underline::after, h2:hover::after, h3:hover::after {
    transform: scaleX(1); /* Scales the pseudo-element to its full size, making it visible */
}


/* When you hover over h2 or h3 elements, this rule scales their ::after pseudo-elements back to their full size, making the underline effect reappear. */
h2:hover::after, h3:hover::after {
    transform: scaleX(1);
}

/* The .award class applies to elements that represent awards. It uses flexbox to stack children vertically and centers them. It also prepares for a hover effect by defining a transition on the box-shadow property. */
.award {
    position: relative; /* Enables absolute positioning for child elements relative to this element */
    display: flex;
    flex-direction: column;
    align-items: center;
    margin-bottom: 30px;
    transition: box-shadow 0.3s ease-in-out; /* Animates changes to box-shadow */
}

/* Adjust box-shadow for a subtler effect */
.award:hover {
    box-shadow: 0 0 5px 2px rgba(139, 0, 0, 0.2); /* Reduced size and opacity for subtlety */
}

/* Styles for icons within the .award elements. They are centered, set to a specific size, and their opacity is reduced for a faded look. */
.award-icon {
    width: 100px;
    margin: 0 auto 20px;
    flex-shrink: 0;
    opacity: 0.5;
}

/* Styling for headings and paragraphs inside .award-info blocks, providing consistent spacing. */
.award-info h3, .award-info p {
    margin: 5px 0;
}

/* Before and after pseudo-elements of .award create decorative elements (likely corners or embellishments). They are positioned absolutely and have transitions for animation. */
.award::before, .award::after {
    content: '';
    position: absolute;
    width: 10px;
    height: 10px;
    border: 2px solid #8B0000; /* Dark red, matching the theme */
    transition: all 0.5s ease-in-out; /* Animates all properties smoothly */
}

/* Positions the ::before pseudo-element at the top-left corner without right and bottom borders, creating a specific shape or effect. */
.award::before {
    top: -10px;
    left: -10px;
    border-right: none;
    border-bottom: none;
}

/* Positions the ::after pseudo-element at the bottom-right corner without top and left borders, mirroring the effect of ::before. */
.award::after {
    bottom: -10px;
    right: -10px;
    border-left: none;
    border-top: none;
}

/* On hover, expands the ::before and ::after pseudo-elements to create a dynamic decorative effect around .award elements. */
.award:hover::before, .award:hover::after {
    width: calc(100% + 20px); /* Expands beyond the element's width */
    height: calc(100% + 20px); /* Expands beyond the element's height */
}

/* Styles for lists in the licenses-certifications section and paragraphs in the skills section, aligning items centrally and adding vertical spacing. */
#licenses-certifications ul, #skills p {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: 10px;
}

/* Adjusts the margin around h3 elements in job descriptions to control spacing more precisely. */
.job h3 {
    margin-bottom: 0.5em; /* Reduces spacing below the header */
}

/* Adjusts paragraph spacing within job descriptions for clarity and separation. */
.job p {
    margin-top: 0; /* Removes space above */
    margin-bottom: 2em; /* Increases space below */
}

/* Increases the opacity of award icons to make them more visible, with a smooth transition on hover. */
.award .award-icon {
    opacity: 0.8;
    transition: opacity 0.3s ease; /* Smoothly animates the opacity change */
}

/* Ensures award icons are fully opaque when hovered over, drawing attention to them. */
.award .award-icon:hover {
    opacity: 1;
}

/* Corrects the position of the underline effect for h3 elements within the .award-info, bringing it closer to the text. */
.award-info h3::after {
    bottom: 5px;
}

/* Styles for the profile picture, setting its size and shape, and ensuring it has some spacing from adjacent text. */
.profile-pic img {
  width: 100px;
  height: 100px;
  border-radius: 50%; /* Makes the image circular */
  margin-right: 20px; /* Spaces the image from the text */
}

/* Ensures header text is aligned and centered properly, useful for layouts involving text next to images or icons. */
.header-text {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

/* Styles links to have no underline by default and to transition smoothly to a slightly brighter shade of red on hover. */
a {
  text-decoration: none; /* Removes the underline */
  color: #8B0000; /* Dark red */
  transition: color 0.3s ease; /* Animates the color change */
}

a:hover {
  color: #aa0000; /* Brighter red */
}

/* Removes the box-shadow from .award elements on hover, undoing the earlier shadow effect for a cleaner look. */
.award:hover {
  box-shadow: none;
}

